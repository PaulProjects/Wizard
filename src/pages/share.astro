---
import Layout from "../layouts/Layout.astro";
import { Icon } from "astro-icon";
---

<Layout title="Wizzard!">
    <div id="start" class="hidden"> 
        <div class="flex items-center justify-center h-screen">
            <div class="text-center w-full px-10">
                <h1 class="text-2xl font-bold">Import game</h1>
                <p id="import_id">Loading...</p>
                <div class="card mt-10 bg-base-200 w-full" id="import_card">
                    <div class="w-full h-full">
                        <span class="inline-block pl-3 pt-3" id="date"></span>
                        <span class="float-right pr-3 pt-3" id="duration">
                            Minutes</span
                        >
                        <div class="card-body">
                            <div class="overflow-x-auto">
                                <table class="table">
                                    <!-- head -->
                                    <thead>
                                        <tr>
                                            <th>Position</th>
                                            <th>Name</th>
                                            <th>Points</th>
                                        </tr>
                                    </thead>
                                    <tbody id="import_table"> </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <button class="btn btn-block btn-secondary" id="import-game"
                    >Import the game</button
                >
                <div class="pt-4"></div>
                <button class="btn btn-block btn-secondary">
                    <a href="/">Back to home</a>
                </button>
            </div>
        </div>
    </div>
    <div class="flex items-center justify-center h-screen" id="loading">
        <div class="text-center">
            <span class="loading loading-infinity loading-lg"></span>
            <h1 class="text-2xl font-bold">Loading game...</h1>
        </div>
    </div>
    <div id="error" class="hidden">
        <div class="flex items-center justify-center h-screen">
            <div class="text-center">
                <Icon
                    name="mdi:alert-circle-outline"
                    class="text-red-500 w-16 h-16"
                />
                <br />
                <h1 class="text-2xl font-bold">Error</h1>
                <p id="errorcode"></p>
                <br />
                <button class="btn btn-block btn-secondary"
                    ><a href="/">Back to home</a></button
                >
            </div>
        </div>
    </div>
    <div class="hidden" id="success">
        <div class="flex items-center justify-center h-screen">
            <div class="text-center">
                <Icon
                    name="mdi:check-circle-outline"
                    class="text-green-500 w-16 h-16"
                />
                <h1 class="text-2xl font-bold">Success</h1>
                <p>The game has been imported successfully.</p>
                <br />
                <button class="btn btn-block btn-secondary"
                    ><a href="/">Back to home</a></button
                >
            </div>
        </div>
    </div>
</Layout>
<script
    is:inline
    src="https://code.jquery.com/jquery-3.7.0.min.js"
    integrity="sha256-2Pmvv0kuTBOenSvLm6bvfBSSHrUJ+3A7x6P5Ebd07/g="
    crossorigin="anonymous"></script>
<script>
    function error(error) {
        document.getElementById("loading").classList.add("hidden");
        document.getElementById("start").classList.add("hidden");
        document.getElementById("error").classList.remove("hidden");
        document.getElementById("errorcode").innerHTML = error;
    }
    function success() {
        document.getElementById("loading").classList.add("hidden");
        document.getElementById("start").classList.add("hidden");
        document.getElementById("success").classList.remove("hidden");
    }
    //read the game id from the url
    const urlParams = new URLSearchParams(window.location.search);
    const gameId = urlParams.get("id");

    let game;
    
    if (gameId === null) {
        error("Not a valid link");
    } else {
        $("#import_id").text("Game id: " + gameId);

        //import the game from this url: https://paulbertram.de/wizzard/wizzardshare.php?id=[gameid]
        const url = `https://paulbertram.de/wizzard/wizzardshare.php?id=${gameId}`;
        //use xml http request to import the game
        const xhr = new XMLHttpRequest();
        xhr.open("GET", url, true);
        xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
                if (xhr.status === 200) {
                    $("#loading").addClass("hidden");
                    $("#start").removeClass("hidden");
                    try {
                        game = JSON.parse(xhr.responseText);
                        console.log(game);
                        
                        game.id = gameId;

                        let players = game.players;

                        let time_started = game.time_started;
                        let time_ended = game.time_ended;
                        let time_diff = time_ended - time_started;
                        let time_diff_minutes = Math.floor(time_diff / 60000);

                        //Extract date from time_ended
                        let date = new Date(time_ended);
                        let day = date.getDate();
                        //write month as string
                        let month = date.toLocaleString("default", {
                            month: "short",
                        });
                        let year = date.getFullYear();
                        let date_string = `${day}.${month}.${year}`;

                        $("#date").text(date_string);
                        $("#duration").text(time_diff_minutes + " Minutes");

                        let score = game.score;
                        //extract last row of score
                        let last_row = score[score.length - 1];
                        //create a new array with the players and their points
                        let p_s = [];
                        for (let j = 0; j < players.length; j++) {
                            p_s.push({
                                name: players[j],
                                points: last_row[j],
                            });
                        }

                        //sort by points
                        p_s.sort((a, b) => {
                            return b.points - a.points;
                        });

                        //give them a position number, two players with the same points will have the same position
                        for (let j = 0; j < p_s.length; j++) {
                            if (j > 0) {
                                if (p_s[j].points === p_s[j - 1].points) {
                                    p_s[j].position = p_s[j - 1].position;
                                } else {
                                    p_s[j].position = j + 1;
                                }
                            } else {
                                p_s[j].position = j + 1;
                            }
                        }

                        // loop through players and add them to the table
                        for (let j = 0; j < p_s.length; j++) {
                            $(`#import_table`).append(`
                                 <tr>
                                   <th>${p_s[j].position}</th>
                                   <td>${p_s[j].name}</td>
                                   <td>${p_s[j].points}</td>
                                 </tr>
                            `);
                        }

                        //add class="bg-base-200 to the first row"
                        $(`#import_table tr:first-child`).addClass("bg-info");
                    } catch (e) {
                        error("Invalid game data" + e);
                    }
                } else {
                    error(xhr.status);
                }
            }
        };
        xhr.send();

        $("#import-game").on("click", function () {
            let recent_games = JSON.parse(localStorage.getItem("recent_games"));
            if (recent_games === null) {
                recent_games = [];
            }
            else{
                //check recent_games if the game already exists by comparing time_started and time_ended
            }
            recent_games.push(game);
            //set recent_games in localstorage
            localStorage.setItem("recent_games", JSON.stringify(recent_games));
            success();
        });
    }
</script>

---
import Layout from "../layouts/Layout.astro";
import { Icon } from "astro-icon";
import Score from "../components/Score.astro";
import ImportGame from "../components/ImportGame.astro";
---

<Layout title="Configure the game.">
  <div class="flex justify-center">
    <div
      class="flex justify-center flex-wrap flex-col p-5 w-full lg:w-1/2 md:w-2/3 md:h-2/3"
    >
      <div class="flex flex-nowrap items-center">
        <div class="" id="tl_container">
          <button class="btn btn-square btn-outline" id="tlbtn">
            <Icon name="mdi:chevron-left" class="w-6 h-6" />
          </button>
        </div>
        <div id="title" class="prose prose-sm md:prose-base w-full flex-grow">
          <h1 class="text-center text-6xl">Past Games</h1>
        </div>
      </div>

      <!--  -->
      <div
        id="past_games"
        class="flex flex-col flex-wrap items-center justify-center"
      >
      </div>
    </div>
  </div>
  <div class="hidden" id="score"><Score /></div>
  <!-- Settings modal -->
  <dialog id="modal_settings" class="modal modal-top sm:modal-middle">
    <form method="dialog" class="modal-box">
      <button class="btn btn-sm btn-circle btn-ghost absolute right-2 top-2"
        >✕</button
      >
      <div class="flex flex-col justify-center items-center">
        <h2 class="font-bold text-3xl mt-5">Advanced options</h2>
        <div>
          <button id="export_data" class="btn btn-info btn-block mt-2">
            Export Data</button
          >
          <button id="import_data" class="btn btn-info btn-block mt-2">
            Import Data
          </button>
          <button id="del_game" class="btn btn-primary btn-block mt-2 hidden">
            Delete this game
          </button>
          <button id="del_all" class="btn btn-primary btn-block mt-2">
            Delete all local data
          </button>
        </div>
      </div>
    </form>
    <form method="dialog" class="modal-backdrop">
      <button>close</button>
    </form>
  </dialog>
  <!-- End of Settings modal -->
  <!-- Really End game? modal -->
  <dialog id="modal_delete" class="modal modal-top sm:modal-middle">
    <form method="dialog" class="modal-box">
      <button class="btn btn-sm btn-circle btn-ghost absolute right-2 top-2"
        >✕</button
      >
      <div class="flex flex-col justify-center items-center">
        <h2 class="font-bold text-3xl mt-5" id="modal_del_text">
          Do you really want to delete all data?
        </h2>
        <p class="pl-10 pr-10" id="modal_del_infotext">
          This will remove all stored data about current and past games
          permanently!
        </p>
        <div>
          <!-- Cancel Game Button that navigates to / -->
          <button class="btn btn-primary btn-block mt-5" id="rremovedata">
            Remove Data
          </button>
          <button class="btn btn-info btn-block mt-2"> Cancel</button>
        </div>
      </div>
    </form>
    <form method="dialog" class="modal-backdrop">
      <button>close</button>
    </form>
  </dialog>
  <!-- End of Settings modal -->
  <ImportGame />
  <script is:inline src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script is:inline src="../scripts/score.js"></script>
  <script
    is:inline
    src="https://cdn.jsdelivr.net/npm/canvas-confetti@1.6.0/dist/confetti.browser.min.js"
  ></script>
  <script
    is:inline
    src="https://code.jquery.com/jquery-3.7.0.min.js"
    integrity="sha256-2Pmvv0kuTBOenSvLm6bvfBSSHrUJ+3A7x6P5Ebd07/g="
    crossorigin="anonymous"></script>
  <script>
    let view = 0; //0 = overview ; 1 = details
    // check if past_games exists in local storage if not return
    let past_games = JSON.parse(localStorage.getItem("recent_games"));
    if (past_games === null || past_games.length === 0) {
      location.href = "/";
    }

    //advances modal
    $("#title").on("click", () => {
      document.getElementById("modal_settings").open = true;
    });

    $("#del_game").on("click", () => {
      //remove all onclick attributes
      $("#rremovedata").removeAttr("onclick");
      //show modal_delete
      document.getElementById("modal_delete").open = true;
      //change text
      document.getElementById("modal_del_text").innerHTML =
        "Do you really want to delete this game?";
      document.getElementById("modal_del_infotext").innerHTML =
        "This will remove all stored data about this game permanently!";
      //add onclick to the button
      $("#rremovedata").on("click", () => {
        //get the index of the game
        let index = past_games.indexOf(Lgame);
        //remove the game from the array
        past_games.splice(index, 1);
        //save the array in localstorage
        localStorage.setItem("recent_games", JSON.stringify(past_games));
        //reload the page
        location.reload();
      });
    });

    $("#del_all").on("click", () => {
      //remove all onclick attributes
      $("#rremovedata").removeAttr("onclick");
      //show modal_delete
      document.getElementById("modal_delete").open = true;
      //change text
      document.getElementById("modal_del_text").innerHTML =
        "Do you really want to delete all data?";
      document.getElementById("modal_del_infotext").innerHTML =
        "This will remove all stored data about current and past games permanently!";
      //add onclick to the button
      $("#rremovedata").on("click", () => {
        localStorage.clear();
        location.reload();
      });
    });

    //reverse the array so the newest game is first
    past_games.reverse();

    // loop through past_games and create a div for each game
    for (let i = 0; i < past_games.length; i++) {
      window.game = past_games[i];
      let game = window.game;
      let players = JSON.parse(game.players);

      let time_started = game.time_started;
      let time_ended = game.time_ended;
      let time_diff = time_ended - time_started;
      let time_diff_minutes = Math.floor(time_diff / 60000);

      //Extract date from time_ended
      let date = new Date(time_ended);
      let day = date.getDate();
      //write month as string
      let month = date.toLocaleString("default", { month: "short" });
      let year = date.getFullYear();
      let date_string = `${day}.${month}.${year}`;

      $("#past_games").append(`
    <div class="card mt-10 bg-base-200 w-full" id="card${i}">
          <div class="w-full h-full">
            <span class="inline-block pl-3 pt-3">${date_string}</span>
            <span class="float-right pr-3 pt-3"> ${time_diff_minutes} Minutes</span>
            <div class="card-body">
              <div class="overflow-x-auto">
                <table class="table">
                  <!-- head -->
                  <thead>
                    <tr>
                      <th>Position</th>
                      <th>Name</th>
                      <th>Points</th>
                    </tr>
                  </thead>
                  <tbody  id="table${i}">
                  </tbody>
                </table>
              </div>
            </div>
          </div>
          <div class="card--hover">
              <a id="more${i}">Find out more</a>
          </div>
        </div>
    `);

      //add event listener to the more button
      $(`#more${i}`).on("click", function () {
        clicked_more(i);
      });

      $(`#card${i}`).on("click", function () {
        clicked_more(i);
      });

      let score = JSON.parse(game.score);
      //extract last row of score
      let last_row = score[score.length - 1];
      //create a new array with the players and their points
      let p_s = [];
      for (let j = 0; j < players.length; j++) {
        p_s.push({
          name: players[j],
          points: last_row[j],
        });
      }

      //sort by points
      p_s.sort((a, b) => {
        return b.points - a.points;
      });
      
      //give them a position number, two players with the same points will have the same position
      for (let j = 0; j < p_s.length; j++) {
        if (j > 0) {
          if (p_s[j].points === p_s[j - 1].points) {
            p_s[j].position = p_s[j - 1].position;
          } else {
            p_s[j].position = j + 1;
          }
        } else {
          p_s[j].position = j + 1;
        }
      }
      

      // loop through players and add them to the table
      for (let j = 0; j < p_s.length; j++) {
        $(`#table${i}`).append(`
        <tr>
          <th>${p_s[j].position}</th>
          <td>${p_s[j].name}</td>
          <td>${p_s[j].points}</td>
        </tr>
      `);
      }

      //add class="bg-base-200 to the first row"
      $(`#table${i} tr:first-child`).addClass("bg-info");
    }

    let Lgame;
    function clicked_more(i) {
      score_switch_view("4");
      view = 1;
      //hide past_games and remove hidden from score
      $("#past_games").addClass("hidden");
      $("#score").removeClass("hidden");
      //remove hidden from del_game
      $("#del_game").removeClass("hidden");
      //get the game and store it in Lgame
      Lgame = past_games[i];
      Lgame.step = "3";
      let players = JSON.parse(Lgame.players);
      updatescore(players, Lgame);
    }

    //Switch to graph
    $("#icon_chart").on("click", () => {
      score_switch_view("1");
    });
    $("#icon_table").on("click", () => {
      score_switch_view("2");
    });
    $("#icon_top").on("click", () => {
      score_switch_view("3");
    });
    $("#icon_celeb").on("click", () => {
      score_switch_view("4");
    });
    $("#icon_bar").on("click", () => {
      score_switch_view("5");
    });
    $("#icon_analytics").on("click", () => {
      score_switch_view("6");
    });

    //#endregion

    $("#tlbtn").on("click", () => {
      if (view == 1) {
        $("#score").addClass("hidden");
        $("#past_games").removeClass("hidden");
        $("#del_game").addClass("hidden");
        view = 0;
        end = Date.now() - 10;
        confetti.reset();
      } else {
        location.href = "/";
      }
    });
  </script>

  <style is:global>
    .card:hover .card--hover a,
    .card:hover {
      box-shadow: 0 4px 18px 0 rgba(0, 0, 0, 0.25);
    }

    .card {
      -webkit-box-flex: 300px;
      -ms-flex: 300px;
      flex: 300px;
      border-radius: 10px;
      border: 2px solid #c3c6ce;
      cursor: pointer;
      position: relative;
      transition: 0.5s ease;
    }
    .card:hover {
      border-color: #008bf8;
    }
    .card:hover .card--hover {
      opacity: 1;
    }
    .card:hover .card--hover a {
      -webkit-transform: translate(-50%, 50%);
      -ms-transform: translate(-50%, 50%);
      transform: translate(-50%, 50%);
      opacity: 1;
    }
    .card--hover {
      padding: 60px 0;
      text-align: center;
      opacity: 0.6;
      transition: 0.25s ease;
    }
    .card--hover h3 {
      font-size: 30px;
      font-weight: bold;
      margin: 0;
    }
    .card--hover p {
      margin: 10px 0 0;
    }
    .card--hover a {
      -webkit-transform: translate(-50%, 125%);
      -ms-transform: translate(-50%, 125%);
      transform: translate(-50%, 125%);
      border-radius: 20px;
      background-color: #7fefbd;
      color: #1a1a1a;
      padding: 8px 16px;
      display: inline-block;
      text-decoration: none;
      position: absolute;
      left: 50%;
      bottom: 0;
      opacity: 0;
      transition: 0.25s ease;
    }
  </style>
</Layout>
